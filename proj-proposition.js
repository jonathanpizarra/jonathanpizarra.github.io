
let prop_text = "" + 
"   Enter proposition : ((p v r) ^ (q -> p -> r)) -> (s <-> t o ((q v r) o (r -> (p <-> t))) o s <-> t)*" + 
"   =========================================================*" + 
"    Result : CONTINGENCY*" + 
"    Truth Table:*" + 
"   ┌───┬───┬───┬───┬───┬────────┬────────┬────────┬────────┬────────┬────────┬────────┬────────┬────────┬────────┬────────┬────────┬────────┐*" + 
"   │ p │ q │ r │ s │ t │ A: pvr │ B: q>p │ C: B&r │ D: A^C │ E: qvr │ F: p#t │ G: r&F │ H: EoG │ I: s#t │ J: IoH │ K: Jos │ L: K#t │ M: D&L │*" +  
"   ├───┼───┼───┼───┼───┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┤*" + 
"   │ 1 │ 1 │ 1 │ 1 │ 1 │   1    │   1    │   1    │   1    │   1    │   1    │   1    │   0    │   1    │   1    │   0    │   0    │   0    │*" + 
"   │ 1 │ 1 │ 1 │ 1 │ 0 │   1    │   1    │   1    │   1    │   1    │   0    │   0    │   1    │   0    │   1    │   0    │   1    │   1    │*" + 
"   │ 1 │ 1 │ 1 │ 0 │ 1 │   1    │   1    │   1    │   1    │   1    │   1    │   1    │   0    │   0    │   0    │   0    │   0    │   0    │*" + 
"   │ 1 │ 1 │ 1 │ 0 │ 0 │   1    │   1    │   1    │   1    │   1    │   0    │   0    │   1    │   1    │   0    │   0    │   1    │   1    │*" + 
"   │ 1 │ 1 │ 0 │ 1 │ 1 │   1    │   1    │   0    │   0    │   1    │   1    │   1    │   0    │   1    │   1    │   0    │   0    │   1    │*" + 
"   │ 1 │ 1 │ 0 │ 1 │ 0 │   1    │   1    │   0    │   0    │   1    │   0    │   1    │   0    │   0    │   0    │   1    │   0    │   1    │*" + 
"   │ 1 │ 1 │ 0 │ 0 │ 1 │   1    │   1    │   0    │   0    │   1    │   1    │   1    │   0    │   0    │   0    │   0    │   0    │   1    │*" + 
"   │ 1 │ 1 │ 0 │ 0 │ 0 │   1    │   1    │   0    │   0    │   1    │   0    │   1    │   0    │   1    │   1    │   1    │   0    │   1    │*" + 
"   │ 1 │ 0 │ 1 │ 1 │ 1 │   1    │   1    │   1    │   1    │   1    │   1    │   1    │   0    │   1    │   1    │   0    │   0    │   0    │*" + 
"   │ 1 │ 0 │ 1 │ 1 │ 0 │   1    │   1    │   1    │   1    │   1    │   0    │   0    │   1    │   0    │   1    │   0    │   1    │   1    │*" + 
"   │ 1 │ 0 │ 1 │ 0 │ 1 │   1    │   1    │   1    │   1    │   1    │   1    │   1    │   0    │   0    │   0    │   0    │   0    │   0    │*" + 
"   │ 1 │ 0 │ 1 │ 0 │ 0 │   1    │   1    │   1    │   1    │   1    │   0    │   0    │   1    │   1    │   0    │   0    │   1    │   1    │*" + 
"   │ 1 │ 0 │ 0 │ 1 │ 1 │   1    │   1    │   0    │   0    │   0    │   1    │   1    │   1    │   1    │   0    │   1    │   1    │   1    │*" + 
"   │ 1 │ 0 │ 0 │ 1 │ 0 │   1    │   1    │   0    │   0    │   0    │   0    │   1    │   1    │   0    │   1    │   0    │   1    │   1    │*" + 
"   │ 1 │ 0 │ 0 │ 0 │ 1 │   1    │   1    │   0    │   0    │   0    │   1    │   1    │   1    │   0    │   1    │   1    │   1    │   1    │*" + 
"   │ 1 │ 0 │ 0 │ 0 │ 0 │   1    │   1    │   0    │   0    │   0    │   0    │   1    │   1    │   1    │   0    │   0    │   1    │   1    │*" + 
"   │ 0 │ 1 │ 1 │ 1 │ 1 │   1    │   0    │   1    │   1    │   1    │   0    │   0    │   1    │   1    │   0    │   1    │   1    │   1    │*" + 
"   │ 0 │ 1 │ 1 │ 1 │ 0 │   1    │   0    │   1    │   1    │   1    │   1    │   1    │   0    │   0    │   0    │   1    │   0    │   0    │*" + 
"   │ 0 │ 1 │ 1 │ 0 │ 1 │   1    │   0    │   1    │   1    │   1    │   0    │   0    │   1    │   0    │   1    │   1    │   1    │   1    │*" + 
"   │ 0 │ 1 │ 1 │ 0 │ 0 │   1    │   0    │   1    │   1    │   1    │   1    │   1    │   0    │   1    │   1    │   1    │   0    │   0    │*" + 
"   │ 0 │ 1 │ 0 │ 1 │ 1 │   0    │   0    │   1    │   0    │   1    │   0    │   1    │   0    │   1    │   1    │   0    │   0    │   1    │*" + 
"   │ 0 │ 1 │ 0 │ 1 │ 0 │   0    │   0    │   1    │   0    │   1    │   1    │   1    │   0    │   0    │   0    │   1    │   0    │   1    │*" + 
"   │ 0 │ 1 │ 0 │ 0 │ 1 │   0    │   0    │   1    │   0    │   1    │   0    │   1    │   0    │   0    │   0    │   0    │   0    │   1    │*" + 
"   │ 0 │ 1 │ 0 │ 0 │ 0 │   0    │   0    │   1    │   0    │   1    │   1    │   1    │   0    │   1    │   1    │   1    │   0    │   1    │*" + 
"   │ 0 │ 0 │ 1 │ 1 │ 1 │   1    │   1    │   1    │   1    │   1    │   0    │   0    │   1    │   1    │   0    │   1    │   1    │   1    │*" + 
"   │ 0 │ 0 │ 1 │ 1 │ 0 │   1    │   1    │   1    │   1    │   1    │   1    │   1    │   0    │   0    │   0    │   1    │   0    │   0    │*" + 
"   │ 0 │ 0 │ 1 │ 0 │ 1 │   1    │   1    │   1    │   1    │   1    │   0    │   0    │   1    │   0    │   1    │   1    │   1    │   1    │*" + 
"   │ 0 │ 0 │ 1 │ 0 │ 0 │   1    │   1    │   1    │   1    │   1    │   1    │   1    │   0    │   1    │   1    │   1    │   0    │   0    │*" + 
"   │ 0 │ 0 │ 0 │ 1 │ 1 │   0    │   1    │   0    │   0    │   0    │   0    │   1    │   1    │   1    │   0    │   1    │   1    │   1    │*" + 
"   │ 0 │ 0 │ 0 │ 1 │ 0 │   0    │   1    │   0    │   0    │   0    │   1    │   1    │   1    │   0    │   1    │   0    │   1    │   1    │*" + 
"   │ 0 │ 0 │ 0 │ 0 │ 1 │   0    │   1    │   0    │   0    │   0    │   0    │   1    │   1    │   0    │   1    │   1    │   1    │   1    │*" + 
"   │ 0 │ 0 │ 0 │ 0 │ 0 │   0    │   1    │   0    │   0    │   0    │   1    │   1    │   1    │   1    │   0    │   0    │   1    │   1    │*" + 
"   └───┴───┴───┴───┴───┴────────┴────────┴────────┴────────┴────────┴────────┴────────┴────────┴────────┴────────┴────────┴────────┴────────┘*" + 
    
"";



class PropositionAnimation {
    constructor(pre){
        this.pre = pre;
        this.index = 0;
        this.start = 100;
        this.arr = [];
        this.i = 0;
    }

    add_char = (str)=>{
        if(prop_text[this.index] == '*'){
            this.pre.innerHTML += "<br>";
        }else if(prop_text[this.index] == '#'){
            this.pre.innerHTML += "&lt;";
        }else if(prop_text[this.index] == '&'){
            this.pre.innerHTML += "&gt;";
        }else{
            this.pre.innerHTML += prop_text[this.index];
        }
        this.index++;

    }

    draw = ()=>{
        let str = '';
        for(let x=0; x<this.start; x++){
            if(prop_text[x] == '*'){
                str += "<br>";
            }else if(prop_text[x] == '#'){
                str += "&lt;";
            }else if(prop_text[x] == '&'){
                str += "&gt;";
            }else{
                str += prop_text[x];
            }
        }
        this.pre.innerHTML = str;
        this.index = this.start;
    
        this.setInt = setInterval(this.add_char,1);
    }

    stop = ()=>{
        clearInterval(this.setInt);
    }


}
